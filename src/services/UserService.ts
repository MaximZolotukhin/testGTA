import { User } from '../model/User.js'
import { AppDataSource } from '../data-source.js'

export class UserService {
  async create(dto: { name: string; email: string; password: string }): Promise<User> {
    const user = new User()
    user.name = dto.name
    user.email = dto.email
    user.password = dto.password // TODO –Ω—É–∂–Ω–æ —Ä–µ–ª–∞–∑–æ–≤–∞—Ç—å —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ

    const userRepository = AppDataSource.getRepository(User)
    const savedUser = await userRepository.save(user)

    return savedUser
  }

  async validate(email: string, password: string): Promise<User | null> {
    console.log('üîç –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å email:', email)

    try {
      const userRepository = AppDataSource.getRepository(User)

      // –Ø–≤–Ω–æ –≤—ã–±–∏—Ä–∞–µ–º password
      const user = await userRepository.findOne({
        where: { email },
        select: ['id', 'name', 'email', 'password', 'createdAt', 'updatedAt'],
      })

      if (!user) {
        return null
      }

      if (user.password === null || user.password === undefined) {
        return null
      }

      if (user.password === password) {
        return user
      }

      return null
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error)
      return null
    }
  }
}
